@*@page "/users1/create"
@inject AppDbContext _context
@inject NavigationManager _navManager
@using crudApp.Data
@using crudApp.Models
@using Microsoft.AspNetCore.Components
@using User = crudApp.Models.User

<h1>Create New User</h1>

<EditForm Model="@User" OnValidSubmit="@SaveUser">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="Name">Name:</label>
        <InputText class="form-control" id="Name" @bind-Value="User.Name"/>
        <ValidationMessage For="@(() => User.Name)"/>
    </div>

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText class="form-control" id="Email" @bind-Value="User.Email"/>
        <ValidationMessage For="@(() => User.Email)"/>
    </div>

    <div class="form-group">
        <label for="Password">Password:</label>
        <InputText type="password" class="form-control" id="Password" @bind-Value="User.Password"/>
        <ValidationMessage For="@(() => User.Password)"/>
    </div>

    $1$<div class="form-group">
        <label for="RoleId">Role:</label>
        <InputSelect class="form-control" id="RoleId" @bind-Value="User.RoleId">
            @foreach (var role in _context.Roles)
            {
                <option value="@role.Id">@role.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => User.RoleId)"/>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a class="btn btn-secondary" href="/users1">Back to List</a>#1#
</EditForm>

@code {
    private User User { get; set; } = new User();

    private void SaveUser()
    {
        _context.Users.Add(User);
        _context.SaveChanges();
        _navManager.NavigateTo("/users");
    }

}*@